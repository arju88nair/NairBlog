<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Today I learned</title>
    <link>/post/</link>
    <description>Recent content in Posts on Today I learned</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright (c) 2018, all rights reserved.</copyright>
    <lastBuildDate>Mon, 16 Jul 2018 13:14:11 +0530</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PHP 2</title>
      <link>/post/php-2/</link>
      <pubDate>Mon, 16 Jul 2018 13:14:11 +0530</pubDate>
      
      <guid>/post/php-2/</guid>
      <description> Error Control Operators  @ - Suppresses errors
 </description>
    </item>
    
    <item>
      <title>PHP7</title>
      <link>/post/php7/</link>
      <pubDate>Thu, 12 Jul 2018 17:13:19 +0530</pubDate>
      
      <guid>/post/php7/</guid>
      <description>New to PHP 7  New Zend engine Fast Facilitates Error Handling using exceptions 64-Bit Windows Systems Support New Spaceship and Null Coalescing Operators(&amp;lt;=&amp;gt; The spaceship operator returns 0 if both operands are equal, 1 if the left is greater, and -1 if the right is greater. It’s also called a three-way comparison operator)  PHP 7  Scalar type declarations, has been introduced. Scalar type declaration has two options − coercive - coercive is default mode and need not to be specified.</description>
    </item>
    
    <item>
      <title>What I Did</title>
      <link>/post/when-i-did/</link>
      <pubDate>Wed, 11 Jul 2018 21:20:13 +0530</pubDate>
      
      <guid>/post/when-i-did/</guid>
      <description>Trifle hacks I did Bash commands for lazying Lazy git  For easy git add, commit and push
function gitl() { git add . git commit -a -m &amp;quot;$*&amp;quot; git push origin master }   PHP switches  Switching between PHP versions
 function on7() { sudo a2dismod php5.6 &amp;amp;&amp;amp; sudo a2enmod php7.1 &amp;amp;&amp;amp; sudo service apache2 restart }  function on5() { sudo a2dismod php7.1 &amp;amp;&amp;amp; sudo a2enmod php5.</description>
    </item>
    
    <item>
      <title>Nginx Server Block</title>
      <link>/post/nginx-server-block/</link>
      <pubDate>Wed, 11 Jul 2018 17:31:55 +0530</pubDate>
      
      <guid>/post/nginx-server-block/</guid>
      <description>Nginx This is just a copy of the server configuration of my EC2 instance which contains a Django, PHP and a static applications.
The Django application is served by the help of Uwsgi and Nginx courtesy of this article To quote the article,
 This will serve as an interface to our applications which will translate client requests using HTTP to Python calls that our application can process. We will then set up Nginx in front of uWSGI to take advantage of its high performance connection handling mechanisms and its easy-to-implement security features.</description>
    </item>
    
    <item>
      <title>PHP Part 1</title>
      <link>/post/php-1/</link>
      <pubDate>Wed, 11 Jul 2018 17:02:17 +0530</pubDate>
      
      <guid>/post/php-1/</guid>
      <description>Polymorphism - which classes have different functionality while sharing a common interface.
 Implements to extend an interface in PM
 An interface is similar to a class except that it cannot contain code. An interface can define method names and arguments, but not the contents of the methods An interface does not contain any code,it contain only declaration of methods,properties,events. Interfaces allow us to code which specifies which methods a class must have implement .</description>
    </item>
    
    <item>
      <title>Tidbits</title>
      <link>/post/tidbits/</link>
      <pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/tidbits/</guid>
      <description>Make command  The make command accepts targets as command line arguments. These targets are usually specified in a file named &amp;lsquo;Makefile&amp;rsquo;, which also contains the associated action corresponding to the targets.
 Splat operator This feature allows you to capture a variable number of arguments to a function, combined with &amp;ldquo;normal&amp;rdquo; arguments passed in if you like. It&amp;rsquo;s easiest to see with an example:
 function concatenate($transform, ...$strings) { $string = &#39;&#39;; foreach($strings as $piece) { $string .</description>
    </item>
    
  </channel>
</rss>