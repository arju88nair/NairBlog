<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Laravel on Today I learned</title>
    <link>/tags/laravel/</link>
    <description>Recent content in Laravel on Today I learned</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright (c) 2018, all rights reserved.</copyright>
    <lastBuildDate>Fri, 20 Jul 2018 18:08:33 +0530</lastBuildDate>
    
	<atom:link href="/tags/laravel/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Laravel</title>
      <link>/post/laravel/</link>
      <pubDate>Fri, 20 Jul 2018 18:08:33 +0530</pubDate>
      
      <guid>/post/laravel/</guid>
      <description>LifeCycle
 Index.php loads the Composer generated autoloader definition, and then retrieves an instance of the Laravel application from bootstrap/app.php script. HTTP / Console Kernels Next, the incoming request is sent to either the HTTP kernel or the console kernel, depending on the type of request that is entering the application. These two kernels serve as the central location that all requests flow through. The HTTP kernel extends the Illuminate\Foundation\Http\Kernel class, which defines an array of bootstrappers that will be run before the request is executed.</description>
    </item>
    
  </channel>
</rss>