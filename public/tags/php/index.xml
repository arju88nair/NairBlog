<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php on Today I learned</title>
    <link>/tags/php/</link>
    <description>Recent content in Php on Today I learned</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright (c) 2018, all rights reserved.</copyright>
    <lastBuildDate>Wed, 14 Nov 2018 12:47:21 +0530</lastBuildDate>
    
	<atom:link href="/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dependency Injection</title>
      <link>/post/dependency-injection/</link>
      <pubDate>Wed, 14 Nov 2018 12:47:21 +0530</pubDate>
      
      <guid>/post/dependency-injection/</guid>
      <description>Dependency injection is a technique whereby one object supplies the dependencies of another object
class Profile { public function deactivateProfile(Setting $setting) { $setting-&amp;gt;isActive = false; } }  Advantages  Decoupling Their purpose is isolated and can easily be swapped out by other components later. This way your code will be cleaner and decoupled.
 Reusable code Another advantage of dependency injection is that your code will be more reusable since there are no direct dependencies on other entities (objects or classes) in your code.</description>
    </item>
    
    <item>
      <title>Laravel</title>
      <link>/post/laravel/</link>
      <pubDate>Fri, 20 Jul 2018 18:08:33 +0530</pubDate>
      
      <guid>/post/laravel/</guid>
      <description>LifeCycle
 &amp;ldquo;bootstrapped&amp;rdquo;? In general, means registering things, including registering service container bindings, event listeners, middleware, and even routes.
 index.php
 Loads the Composer generated autoloader definition, and then retrieves an instance of the Laravel application(Service Container) from bootstrap/app.php script.
 All the application path gets called Kernels get registered Core service providers are called   The first action taken by Laravel itself is to create an instance of the application</description>
    </item>
    
    <item>
      <title>PHP Part 2</title>
      <link>/post/php-2/</link>
      <pubDate>Mon, 16 Jul 2018 13:14:11 +0530</pubDate>
      
      <guid>/post/php-2/</guid>
      <description>Error Control Operators  @ - Suppresses errors
 extract()  It converts array keys into variable names and array values into variable value.
  // input array $state = array(&amp;quot;AS&amp;quot;=&amp;gt;&amp;quot;ASSAM&amp;quot;, &amp;quot;OR&amp;quot;=&amp;gt;&amp;quot;ORRISA&amp;quot;, &amp;quot;KR&amp;quot;=&amp;gt;&amp;quot;KERELA&amp;quot;); extract($state); // after using extract() function echo&amp;quot;\$AS is $AS\n\$KR is $KR\n\$OR is $OR&amp;quot;; ------ $AS is ASSAM $KR is KERELA $OR is ORRISA  Autoload Every time you want to use a new class in your PHP project, first you need to include this class .</description>
    </item>
    
    <item>
      <title>PHP7</title>
      <link>/post/php7/</link>
      <pubDate>Thu, 12 Jul 2018 17:13:19 +0530</pubDate>
      
      <guid>/post/php7/</guid>
      <description>New to PHP 7  New Zend engine Fast Facilitates Error Handling using exceptions 64-Bit Windows Systems Support New Spaceship and Null Coalescing Operators(&amp;lt;=&amp;gt; The spaceship operator returns 0 if both operands are equal, 1 if the left is greater, and -1 if the right is greater. Itâ€™s also called a three-way comparison operator)  PHP 7  Scalar type declarations, has been introduced. Scalar type declaration has two options   coercive - coercive is default mode and need not to be specified.</description>
    </item>
    
    <item>
      <title>Nginx Server Block</title>
      <link>/post/nginx-server-block/</link>
      <pubDate>Wed, 11 Jul 2018 17:31:55 +0530</pubDate>
      
      <guid>/post/nginx-server-block/</guid>
      <description>Nginx This is just a copy of the server configuration of my EC2 instance which contains a Django, PHP and a static applications.
The Django application is served by the help of Uwsgi and Nginx courtesy of this article To quote the article,
 This will serve as an interface to our applications which will translate client requests using HTTP to Python calls that our application can process. We will then set up Nginx in front of uWSGI to take advantage of its high performance connection handling mechanisms and its easy-to-implement security features.</description>
    </item>
    
    <item>
      <title>PHP Part 1</title>
      <link>/post/php-1/</link>
      <pubDate>Wed, 11 Jul 2018 17:02:17 +0530</pubDate>
      
      <guid>/post/php-1/</guid>
      <description>One important principle of OOP is that a class should do one thing, and it should do it well.  Polymorphism - which classes have different functionality while sharing a common interface.
 Implements to extend an interface in PM
 An interface is similar to a class except that it cannot contain code. An interface can define method names and arguments, but not the contents of the methods.A class can implement multiple interfaces.</description>
    </item>
    
  </channel>
</rss>