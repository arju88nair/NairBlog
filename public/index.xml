<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Today I learned</title>
    <link>/</link>
    <description>Recent content on Today I learned</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright (c) 2018, all rights reserved.</copyright>
    <lastBuildDate>Tue, 10 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>This is to take notes and to keep track of my musings (If you can call that)
Disclaimer : I do not own most of these contents.Almost all of them are from different sites and blogs.This is just for me to have my learning resources in one place. Most of the time, I don&amp;rsquo;t remember where I got these contents from. Credits to those owners
You can reach me at :</description>
    </item>
    
    <item>
      <title>Databases</title>
      <link>/post/databases/</link>
      <pubDate>Wed, 08 Aug 2018 19:59:38 +0530</pubDate>
      
      <guid>/post/databases/</guid>
      <description>Relational databases like MySQL, PostgreSQL and SQLite3 represent and store data in tables and rows.
 They&amp;rsquo;re based on a branch of algebraic set theory known as relational algebra.
 Mongo query targets of data are technically represented as BSON (binary JASON).
 Relational databases use Structured Querying Language (SQL), making them a good choice for applications that involve the management of several transactions.
 ACID - Atomicity (each transaction be &amp;ldquo;all or nothing&amp;rdquo;), Consistency (any transaction will bring the database from one valid state to another), Isoloation (concurrent execution of transactions results in a system state that would be obtained if transactions were executed sequentially), Durability (once a transaction has been committed, it will remain so)</description>
    </item>
    
    <item>
      <title>What Happens When</title>
      <link>/post/what-happens-when/</link>
      <pubDate>Mon, 23 Jul 2018 11:43:30 +0530</pubDate>
      
      <guid>/post/what-happens-when/</guid>
      <description>This is a short version of the question what happens when you enter google.com in your browser.  credit When you type &amp;ldquo;G&amp;rdquo;  The browser receives the event and the auto-complete functions kick in. Various suggestions will be presented to you in the dropbox below the URL bar   When you press &amp;ldquo;Enter&amp;rdquo;  Small amount of current to flow into the logic circuitry of the keyboard, which scans the state of each key switch, debounces the electrical noise of the rapid intermittent closure of the switch, and converts it to a keycode integer, in this case 13.</description>
    </item>
    
    <item>
      <title>Programms</title>
      <link>/post/programms/</link>
      <pubDate>Sun, 22 Jul 2018 13:51:09 +0530</pubDate>
      
      <guid>/post/programms/</guid>
      <description>Factorial &amp;lt;?php $number = 6; /*number to get factorial */ $fact = 1; for($k=1;$k&amp;lt;=$number;++$k) { $fact = $fact*$k; } echo &amp;quot;Factorial of $number is &amp;quot;.$fact; ?&amp;gt;  Fibonacci &amp;lt;?PHP $first = 0; $second = 1; echo $first.&#39;&amp;amp;nbsp;,&#39;; echo $second.&#39;&amp;amp;nbsp;,&#39;; for($limit=0;$limit&amp;lt;10;$limit++) { $third = $first+$second; echo $third.&#39;&amp;amp;nbsp;,&#39;;; $first = $second; $second = $third; } ?&amp;gt;  Amstrong &amp;lt;?php $number = $_POST[ &#39;number&#39; ]; // get the number entered by user $temp = $number; $sum = 0; while($temp !</description>
    </item>
    
    <item>
      <title>Javascript</title>
      <link>/post/javascript/</link>
      <pubDate>Sun, 22 Jul 2018 13:50:50 +0530</pubDate>
      
      <guid>/post/javascript/</guid>
      <description>Callback functions They are derived from a programming paradigm known as functional programmings
A callback function, also known as a higher-order function, is a function that is passed to another function Eg:
 $(&amp;quot;#btn_1&amp;quot;).click(function() { alert(&amp;quot;Btn 1 Clicked&amp;quot;); });  Functional programming (often abbreviated FP) is the process of building software by composing pure functions, avoiding shared state, mutable data, and side-effects
A pure function is a function which: Given the same inputs, always returns the same output, and Has no side-effects</description>
    </item>
    
    <item>
      <title>Laravel</title>
      <link>/post/laravel/</link>
      <pubDate>Fri, 20 Jul 2018 18:08:33 +0530</pubDate>
      
      <guid>/post/laravel/</guid>
      <description>LifeCycle
 Index.php loads the Composer generated autoloader definition, and then retrieves an instance of the Laravel application from bootstrap/app.php script. HTTP / Console Kernels Next, the incoming request is sent to either the HTTP kernel or the console kernel, depending on the type of request that is entering the application. These two kernels serve as the central location that all requests flow through. The HTTP kernel extends the Illuminate\Foundation\Http\Kernel class, which defines an array of bootstrappers that will be run before the request is executed.</description>
    </item>
    
    <item>
      <title>PHP Part 2</title>
      <link>/post/php-2/</link>
      <pubDate>Mon, 16 Jul 2018 13:14:11 +0530</pubDate>
      
      <guid>/post/php-2/</guid>
      <description>Error Control Operators  @ - Suppresses errors
 extract()  It converts array keys into variable names and array values into variable value.
  // input array $state = array(&amp;quot;AS&amp;quot;=&amp;gt;&amp;quot;ASSAM&amp;quot;, &amp;quot;OR&amp;quot;=&amp;gt;&amp;quot;ORRISA&amp;quot;, &amp;quot;KR&amp;quot;=&amp;gt;&amp;quot;KERELA&amp;quot;); extract($state); // after using extract() function echo&amp;quot;\$AS is $AS\n\$KR is $KR\n\$OR is $OR&amp;quot;; ------ $AS is ASSAM $KR is KERELA $OR is ORRISA  Autoload Every time you want to use a new class in your PHP project, first you need to include this class .</description>
    </item>
    
    <item>
      <title>PHP7</title>
      <link>/post/php7/</link>
      <pubDate>Thu, 12 Jul 2018 17:13:19 +0530</pubDate>
      
      <guid>/post/php7/</guid>
      <description>New to PHP 7  New Zend engine Fast Facilitates Error Handling using exceptions 64-Bit Windows Systems Support New Spaceship and Null Coalescing Operators(&amp;lt;=&amp;gt; The spaceship operator returns 0 if both operands are equal, 1 if the left is greater, and -1 if the right is greater. Itâ€™s also called a three-way comparison operator)  PHP 7  Scalar type declarations, has been introduced. Scalar type declaration has two options   coercive - coercive is default mode and need not to be specified.</description>
    </item>
    
    <item>
      <title>When I Did</title>
      <link>/post/when-i-did/</link>
      <pubDate>Wed, 11 Jul 2018 21:20:13 +0530</pubDate>
      
      <guid>/post/when-i-did/</guid>
      <description>Trifle hacks I did Bash commands for lazying Lazy git  For easy git add, commit and push
function gitl() { git add . git commit -a -m &amp;quot;$*&amp;quot; git push origin master }   PHP switches  Switching between PHP versions
 function on7() { sudo a2dismod php5.6 &amp;amp;&amp;amp; sudo a2enmod php7.1 &amp;amp;&amp;amp; sudo service apache2 restart }  function on5() { sudo a2dismod php7.1 &amp;amp;&amp;amp; sudo a2enmod php5.</description>
    </item>
    
    <item>
      <title>Nginx Server Block</title>
      <link>/post/nginx-server-block/</link>
      <pubDate>Wed, 11 Jul 2018 17:31:55 +0530</pubDate>
      
      <guid>/post/nginx-server-block/</guid>
      <description>Nginx This is just a copy of the server configuration of my EC2 instance which contains a Django, PHP and a static applications.
The Django application is served by the help of Uwsgi and Nginx courtesy of this article To quote the article,
 This will serve as an interface to our applications which will translate client requests using HTTP to Python calls that our application can process. We will then set up Nginx in front of uWSGI to take advantage of its high performance connection handling mechanisms and its easy-to-implement security features.</description>
    </item>
    
    <item>
      <title>PHP Part 1</title>
      <link>/post/php-1/</link>
      <pubDate>Wed, 11 Jul 2018 17:02:17 +0530</pubDate>
      
      <guid>/post/php-1/</guid>
      <description>One important principle of OOP is that a class should do one thing, and it should do it well.  Polymorphism - which classes have different functionality while sharing a common interface.
 Implements to extend an interface in PM
 An interface is similar to a class except that it cannot contain code. An interface can define method names and arguments, but not the contents of the methods.A class can implement multiple interfaces.</description>
    </item>
    
    <item>
      <title>Tidbits</title>
      <link>/post/tidbits/</link>
      <pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/tidbits/</guid>
      <description>Make command  The make command accepts targets as command line arguments. These targets are usually specified in a file named &amp;lsquo;Makefile&amp;rsquo;, which also contains the associated action corresponding to the targets.
 Splat operator This feature allows you to capture a variable number of arguments to a function, combined with &amp;ldquo;normal&amp;rdquo; arguments passed in if you like. It&amp;rsquo;s easiest to see with an example:
 function concatenate($transform, ...$strings) { $string = &#39;&#39;; foreach($strings as $piece) { $string .</description>
    </item>
    
  </channel>
</rss>